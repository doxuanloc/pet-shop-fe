{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/xuanloc/Documents/pet-shop/PetShopProject/frontend/src/components/Admin/Dashboard/News/DashboardEditor.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Editor } from \"react-draft-wysiwyg\";\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\nimport { stateFromHTML } from 'draft-js-import-html';\nimport { EditorState, convertToRaw } from \"draft-js\";\nimport draftToHtml from \"draftjs-to-html\";\n\nfunction uploadImageCallBack(file) {\n  return new Promise((resolve, reject) => {\n    const xhr = new XMLHttpRequest(); // eslint-disable-line no-undef\n\n    xhr.open('POST', 'https://api.imgur.com/3/image');\n    xhr.setRequestHeader('Authorization', 'Client-ID 8d26ccd12712fca');\n    const data = new FormData(); // eslint-disable-line no-undef\n\n    data.append('image', file);\n    xhr.send(data);\n    xhr.addEventListener('load', () => {\n      const response = JSON.parse(xhr.responseText);\n      resolve(response);\n    });\n    xhr.addEventListener('error', () => {\n      const error = JSON.parse(xhr.responseText);\n      reject(error);\n    });\n  });\n}\n\nexport default function DashboardEditor(props) {\n  _s();\n\n  const [editorState, setEditorState] = useState(EditorState.createEmpty());\n\n  const onEditorStateChange = editorState => {\n    setEditorState(editorState);\n    props.setNewsContent(draftToHtml(convertToRaw(editorState.getCurrentContent())));\n  };\n\n  useEffect(() => {\n    if (props.newsContent) {\n      let contentState = stateFromHTML(props.newsContent);\n      let test = EditorState.createWithContent(contentState);\n      setEditorState(EditorState.moveFocusToEnd(test));\n    }\n  }, [props.newsContent]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Editor, {\n      editorState: editorState,\n      toolbarClassName: \"toolbarClassName\",\n      wrapperClassName: \"wrapperClassName\",\n      editorClassName: \"editorClassName\",\n      onEditorStateChange: onEditorStateChange,\n      toolbar: {\n        image: {\n          uploadCallback: uploadImageCallBack,\n          alt: {\n            present: true,\n            mandatory: true\n          }\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DashboardEditor, \"H1S//Kawa6VxNjMXli63CJgW1YE=\");\n\n_c = DashboardEditor;\n\nvar _c;\n\n$RefreshReg$(_c, \"DashboardEditor\");","map":{"version":3,"sources":["/Users/xuanloc/Documents/pet-shop/PetShopProject/frontend/src/components/Admin/Dashboard/News/DashboardEditor.js"],"names":["React","useEffect","useState","Editor","stateFromHTML","EditorState","convertToRaw","draftToHtml","uploadImageCallBack","file","Promise","resolve","reject","xhr","XMLHttpRequest","open","setRequestHeader","data","FormData","append","send","addEventListener","response","JSON","parse","responseText","error","DashboardEditor","props","editorState","setEditorState","createEmpty","onEditorStateChange","setNewsContent","getCurrentContent","newsContent","contentState","test","createWithContent","moveFocusToEnd","image","uploadCallback","alt","present","mandatory"],"mappings":";;;;;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,MAAT,QAAuB,qBAAvB;AACA,OAAO,kDAAP;AACA,SAASC,aAAT,QAA8B,sBAA9B;AACA,SAASC,WAAT,EAAsBC,YAAtB,QAA0C,UAA1C;AACA,OAAOC,WAAP,MAAwB,iBAAxB;;AAEA,SAASC,mBAAT,CAA6BC,IAA7B,EAAmC;AACjC,SAAO,IAAIC,OAAJ,CACL,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACnB,UAAMC,GAAG,GAAG,IAAIC,cAAJ,EAAZ,CADmB,CACe;;AAClCD,IAAAA,GAAG,CAACE,IAAJ,CAAS,MAAT,EAAiB,+BAAjB;AACAF,IAAAA,GAAG,CAACG,gBAAJ,CAAqB,eAArB,EAAsC,2BAAtC;AACA,UAAMC,IAAI,GAAG,IAAIC,QAAJ,EAAb,CAJmB,CAIU;;AAC7BD,IAAAA,IAAI,CAACE,MAAL,CAAY,OAAZ,EAAqBV,IAArB;AACAI,IAAAA,GAAG,CAACO,IAAJ,CAASH,IAAT;AACAJ,IAAAA,GAAG,CAACQ,gBAAJ,CAAqB,MAArB,EAA6B,MAAM;AACjC,YAAMC,QAAQ,GAAGC,IAAI,CAACC,KAAL,CAAWX,GAAG,CAACY,YAAf,CAAjB;AACAd,MAAAA,OAAO,CAACW,QAAD,CAAP;AACD,KAHD;AAIAT,IAAAA,GAAG,CAACQ,gBAAJ,CAAqB,OAArB,EAA8B,MAAM;AAClC,YAAMK,KAAK,GAAGH,IAAI,CAACC,KAAL,CAAWX,GAAG,CAACY,YAAf,CAAd;AACAb,MAAAA,MAAM,CAACc,KAAD,CAAN;AACD,KAHD;AAID,GAhBI,CAAP;AAkBD;;AACD,eAAe,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAAA;;AAE7C,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgC5B,QAAQ,CAACG,WAAW,CAAC0B,WAAZ,EAAD,CAA9C;;AAEA,QAAMC,mBAAmB,GAAIH,WAAD,IAAiB;AAC3CC,IAAAA,cAAc,CAACD,WAAD,CAAd;AACAD,IAAAA,KAAK,CAACK,cAAN,CAAqB1B,WAAW,CAACD,YAAY,CAACuB,WAAW,CAACK,iBAAZ,EAAD,CAAb,CAAhC;AACD,GAHD;;AAKAjC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI2B,KAAK,CAACO,WAAV,EAAuB;AACrB,UAAIC,YAAY,GAAGhC,aAAa,CAACwB,KAAK,CAACO,WAAP,CAAhC;AACA,UAAIE,IAAI,GAAGhC,WAAW,CAACiC,iBAAZ,CAA8BF,YAA9B,CAAX;AACAN,MAAAA,cAAc,CAACzB,WAAW,CAACkC,cAAZ,CAA2BF,IAA3B,CAAD,CAAd;AACD;AACF,GANQ,EAMN,CAACT,KAAK,CAACO,WAAP,CANM,CAAT;AAQA,sBACE;AAAA,2BACE,QAAC,MAAD;AACE,MAAA,WAAW,EAAEN,WADf;AAEE,MAAA,gBAAgB,EAAC,kBAFnB;AAGE,MAAA,gBAAgB,EAAC,kBAHnB;AAIE,MAAA,eAAe,EAAC,iBAJlB;AAKE,MAAA,mBAAmB,EAAEG,mBALvB;AAME,MAAA,OAAO,EAAE;AACPQ,QAAAA,KAAK,EAAE;AAAEC,UAAAA,cAAc,EAAEjC,mBAAlB;AAAuCkC,UAAAA,GAAG,EAAE;AAAEC,YAAAA,OAAO,EAAE,IAAX;AAAiBC,YAAAA,SAAS,EAAE;AAA5B;AAA5C;AADA;AANX;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAcD;;GA/BuBjB,e;;KAAAA,e","sourcesContent":["\nimport React, { useEffect, useState } from \"react\";\nimport { Editor } from \"react-draft-wysiwyg\";\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\nimport { stateFromHTML } from 'draft-js-import-html'\nimport { EditorState, convertToRaw } from \"draft-js\";\nimport draftToHtml from \"draftjs-to-html\";\n\nfunction uploadImageCallBack(file) {\n  return new Promise(\n    (resolve, reject) => {\n      const xhr = new XMLHttpRequest(); // eslint-disable-line no-undef\n      xhr.open('POST', 'https://api.imgur.com/3/image');\n      xhr.setRequestHeader('Authorization', 'Client-ID 8d26ccd12712fca');\n      const data = new FormData(); // eslint-disable-line no-undef\n      data.append('image', file);\n      xhr.send(data);\n      xhr.addEventListener('load', () => {\n        const response = JSON.parse(xhr.responseText);\n        resolve(response);\n      });\n      xhr.addEventListener('error', () => {\n        const error = JSON.parse(xhr.responseText);\n        reject(error);\n      });\n    },\n  );\n}\nexport default function DashboardEditor(props) {\n\n  const [editorState, setEditorState] = useState(EditorState.createEmpty());\n\n  const onEditorStateChange = (editorState) => {\n    setEditorState(editorState)\n    props.setNewsContent(draftToHtml(convertToRaw(editorState.getCurrentContent())))\n  }\n\n  useEffect(() => {\n    if (props.newsContent) {\n      let contentState = stateFromHTML(props.newsContent);\n      let test = EditorState.createWithContent(contentState);\n      setEditorState(EditorState.moveFocusToEnd(test));\n    }\n  }, [props.newsContent]);\n\n  return (\n    <div>\n      <Editor\n        editorState={editorState}\n        toolbarClassName=\"toolbarClassName\"\n        wrapperClassName=\"wrapperClassName\"\n        editorClassName=\"editorClassName\"\n        onEditorStateChange={onEditorStateChange}\n        toolbar={{\n          image: { uploadCallback: uploadImageCallBack, alt: { present: true, mandatory: true } },\n        }}\n      />\n    </div>\n  )\n}"]},"metadata":{},"sourceType":"module"}