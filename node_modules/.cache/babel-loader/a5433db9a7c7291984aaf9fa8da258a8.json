{"ast":null,"code":"import { APIs, postJSON, parseResult } from './common';\nimport $ from 'jquery';\nexport class ZaloPay {\n  static listenCallback(apptransid, cb) {\n    const ws = new WebSocket(APIs.SUBSCRIBE + \"?apptransid=\" + apptransid);\n    console.log(ws);\n\n    ws.onopen = e => {\n      console.log('open ws', apptransid);\n    };\n\n    ws.onmessage = e => {\n      const data = JSON.parse(e.data);\n      console.log('ws message', data);\n      cb(data);\n      alert('Thanh toán thành công');\n    };\n\n    ws.onclose = e => {\n      console.log('close ws', apptransid);\n    };\n  }\n\n  static pay(url, data = {}, done) {\n    return postJSON(url, data, done, () => {\n      alert('Thanh toán thất bại');\n    });\n  }\n\n  static qr(data, done) {\n    ZaloPay.pay(APIs.QR, data, res => {\n      if (res.returncode === 1) {\n        done(res);\n      } else {\n        alert(parseResult(res));\n      }\n    });\n  }\n\n  static getbanklist(done) {\n    $.getJSON(APIs.GETBANKLIST).done(res => {\n      if (res.returncode === 1) {\n        const banklist = [];\n        const {\n          banks\n        } = res;\n\n        for (const id in banks) {\n          const banklistOfId = banks[id];\n\n          for (const bank of banklistOfId) {\n            banklist.push(bank);\n          }\n        }\n\n        done(banklist);\n      } else {\n        alert(parseResult(res));\n      }\n    }).fail(_ => alert('Không thể lấy danh sách ngân hàng'));\n  }\n\n  static refund(data, done) {\n    return postJSON(APIs.REFUND, data, res => {\n      alert(parseResult(res));\n      done(res);\n    }, () => {\n      alert('Hoàn tiền thất bại');\n    });\n  }\n\n  static getRefundStatus(mrefundid) {\n    return $.getJSON(APIs.GETREFUNDSTATUS + '?mrefundid=' + mrefundid).done(res => {\n      alert(parseResult(res));\n    }).fail(_ => alert('Không thể lấy trạng thái hoàn tiền'));\n  }\n\n  static getOrderStatus(mrefundid) {\n    return $.getJSON(APIs.GETREFUNDSTATUS + '?mrefundid=' + mrefundid).done(res => {\n      alert(parseResult(res));\n    }).fail(_ => alert('Không thể lấy trạng thái hoàn tiền'));\n  }\n\n}","map":{"version":3,"sources":["/Users/xuanloc/Documents/pet-shop/PetShopProject/frontend/src/components/zalopay.js"],"names":["APIs","postJSON","parseResult","$","ZaloPay","listenCallback","apptransid","cb","ws","WebSocket","SUBSCRIBE","console","log","onopen","e","onmessage","data","JSON","parse","alert","onclose","pay","url","done","qr","QR","res","returncode","getbanklist","getJSON","GETBANKLIST","banklist","banks","id","banklistOfId","bank","push","fail","_","refund","REFUND","getRefundStatus","mrefundid","GETREFUNDSTATUS","getOrderStatus"],"mappings":"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","sourcesContent":["import { APIs, postJSON, parseResult } from './common';\nimport $ from 'jquery'; \n\nexport class ZaloPay {\n    static listenCallback(apptransid, cb) {\n      const ws = new WebSocket(APIs.SUBSCRIBE + \"?apptransid=\" + apptransid); \n      console.log(ws)\n      ws.onopen = e => {\n          console.log('open ws', apptransid);\n      };\n      ws.onmessage = e => {\n          const data = JSON.parse(e.data);\n          console.log('ws message', data);\n          cb(data);\n          alert('Thanh toán thành công');\n      };\n      ws.onclose = e => {\n          console.log('close ws', apptransid);\n      };\n    }\n\n    static pay(url, data = {}, done) {\n        return postJSON(url, data, done, () => {\n            alert('Thanh toán thất bại');\n        })\n    }\n  \n    static qr(data, done) {\n        ZaloPay.pay(APIs.QR, data, res => {\n            if (res.returncode === 1) { \n                done(res);\n            } else {\n                alert(parseResult(res));\n            }\n        });\n    }  \n\n  static getbanklist(done) {\n    $.getJSON(APIs.GETBANKLIST)\n    .done(res => {\n      if (res.returncode === 1) {\n        const banklist = [];\n        const { banks } = res;\n        for (const id in banks) {\n          const banklistOfId = banks[id];\n          for (const bank of banklistOfId) {\n            banklist.push(bank);\n          }\n        }\n        done(banklist);\n      } else {\n        alert(parseResult(res));\n      }\n    })\n    .fail(_ => alert('Không thể lấy danh sách ngân hàng'));\n  }\n\n  static refund(data, done) {\n    return postJSON(APIs.REFUND, data, \n      res => {\n        alert(parseResult(res));\n        done(res);\n      }, \n      () => {\n        alert('Hoàn tiền thất bại');\n      });\n  }\n\n  static getRefundStatus(mrefundid) {\n    return $.getJSON(APIs.GETREFUNDSTATUS +'?mrefundid='+ mrefundid)\n      .done(res => {\n        alert(parseResult(res));\n      })\n      .fail(_ => alert('Không thể lấy trạng thái hoàn tiền'));\n  }\n\n  static getOrderStatus(mrefundid) {\n    return $.getJSON(APIs.GETREFUNDSTATUS +'?mrefundid='+ mrefundid)\n      .done(res => {\n        alert(parseResult(res));\n      })\n      .fail(_ => alert('Không thể lấy trạng thái hoàn tiền'));\n  }\n}"]},"metadata":{},"sourceType":"module"}