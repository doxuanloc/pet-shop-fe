{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/namduong/Documents/dev/petshop-project/frontend/src/components/OpenChatBtn.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useRef, useState } from 'react';\nimport '../Styles/Chat.css';\nimport '../App.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faComment, faPaperPlane } from '@fortawesome/free-solid-svg-icons';\nimport socketIOClient from \"socket.io-client\";\nimport { withRouter } from 'react-router-dom';\nimport axios from 'axios';\nimport { UserContext } from '../contexts/User';\nconst ENDPOINT = \"http://localhost:40020\";\n\nfunction OpenChatBtn(props) {\n  _s();\n\n  const messageRef = useRef();\n  const inputRef = useRef();\n  const [openChat, setOpenChat] = useState(false);\n  const [onHover, setOnHover] = useState(false);\n  const [inputValue, setInputValue] = useState(\"\"); // const [openChatContent, setOpenChatContent] = useState(false)\n\n  const socket = socketIOClient(ENDPOINT);\n  const [chatList, setChatList] = useState([]);\n  const [userName, setUserName] = useState(\"\");\n  const [userEmail, setUserEmail] = useState(\"\");\n  const [userInfoExist, setUserInfoExist] = useState(false);\n  const {\n    userInfo\n  } = useContext(UserContext);\n  useEffect(() => {\n    if (userInfo) {\n      setUserName(userInfo.userName);\n      setUserEmail(userInfo.userEmail);\n      setUserInfoExist(true);\n      sessionStorage.removeItem('chat-id');\n      sessionStorage.setItem('chat-id', userInfo._id);\n    }\n\n    if (!sessionStorage.getItem('chat-id')) {\n      sessionStorage.setItem('chat-id', Math.floor(Math.random() * 190000000) + 100000000);\n    }\n\n    axios.get(`http://localhost:4000/chat/${sessionStorage.getItem('chat-id')}`).then(res => {\n      if (res.data.length > 0) setChatList(res.data[0].chatContent);\n    });\n    socket.emit('join', {\n      sessionId: sessionStorage.getItem('chat-id'),\n      isAdmin: false\n    });\n    socket.on('sendFirstInfo', data => {\n      if (data.length > 0) setChatList(data[0].chatContent);\n    });\n    socket.on('thread', data => {\n      setChatList(data.chatContent);\n    });\n    socket.on(\"admin-msg\", function (data) {\n      setChatList(chatList => [...chatList, data]);\n      setTimeout(() => {\n        messageRef.current.scrollIntoView({\n          behavior: \"smooth\"\n        });\n      }, 100);\n    });\n  }, [userInfo]);\n\n  const handleChange = event => {\n    setInputValue({ ...inputValue,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  const location = props.history.location.pathname;\n\n  const sendFirstChatOnSubmit = event => {\n    event.preventDefault();\n    socket.emit('firstMessage', {\n      userInfo: userInfo || null,\n      sessionId: sessionStorage.getItem('chat-id'),\n      chatName: userName,\n      chatEmail: userEmail,\n      chatContent: [{\n        text: inputValue.chatContent,\n        time: new Date()\n      }]\n    });\n    setChatList(chatList => [...chatList, {\n      text: inputValue.chatContent,\n      time: new Date()\n    }]);\n  };\n\n  const sendChatOnSubmit = event => {\n    event.preventDefault();\n    socket.emit('messageSend', {\n      sessionId: sessionStorage.getItem('chat-id'),\n      text: inputValue.messageSend,\n      time: new Date()\n    });\n    setChatList(chatList => [...chatList, {\n      text: inputValue.messageSend,\n      time: new Date()\n    }]);\n    setTimeout(() => {\n      messageRef.current.scrollIntoView({\n        behavior: \"smooth\"\n      });\n    }, 100);\n    inputRef.current.value = \"\";\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: location === \"/login\" || location === \"/admin\" || location === \"/admin/dashboard\" ? \"chat-btn displayNone\" : \"chat-btn\",\n    onMouseEnter: () => {\n      setOnHover(true);\n    },\n    onMouseLeave: () => {\n      if (openChat) {\n        setOnHover(true);\n      } else setOnHover(false);\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: onHover ? \"chat-btn-container chat-btn-hover\" : \"chat-btn-container\",\n      onClick: () => {\n        if (messageRef.current) messageRef.current.scrollIntoView({\n          behavior: \"smooth\"\n        });\n\n        if (openChat) {\n          setOpenChat(false);\n          setOnHover(false);\n        } else {\n          setOpenChat(true);\n          setOnHover(true);\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: faComment,\n        className: \"icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Live Chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: openChat ? \"chat-box hide_chat_box\" : \"chat-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-box-header\",\n        children: \"Live Chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }, this), chatList.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-box-body\",\n        children: [userInfoExist === true && /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: sendFirstChatOnSubmit,\n          className: openChat ? \"form-chat hide_chat_box_item\" : \"form-chat\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Introduce yourself *\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            onChange: event => {\n              setUserName(event.target.value);\n            },\n            value: userName,\n            placeholder: \"Name\",\n            className: \"intro\",\n            disabled: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            onChange: event => {\n              setUserEmail(event.target.value);\n            },\n            value: userEmail,\n            placeholder: \"Email\",\n            className: \"intro\",\n            disabled: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Message *\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            name: \"chatContent\",\n            type: \"textarea\",\n            onChange: handleChange,\n            className: \"message\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"chat-box-body-btn\",\n            children: \"Chat\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 29\n        }, this), userInfoExist === false && /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: sendFirstChatOnSubmit,\n          className: openChat ? \"form-chat hide_chat_box_item\" : \"form-chat\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Introduce yourself *\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            onChange: event => {\n              setUserName(event.target.value);\n            },\n            value: userName,\n            placeholder: \"Name\",\n            className: \"intro\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            onChange: event => {\n              setUserEmail(event.target.value);\n            },\n            value: userEmail,\n            placeholder: \"Email\",\n            className: \"intro\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Message *\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            name: \"chatContent\",\n            type: \"textarea\",\n            onChange: handleChange,\n            className: \"message\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn chat-box-body-btn\",\n            children: \"Chat\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 21\n      }, this), chatList.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-box-body no-p\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: sendChatOnSubmit,\n          className: openChat ? \"form-chat hide_chat_box_item\" : \"form-chat\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex-col chat-box-list\",\n            children: chatList.map((item, index) => {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                ref: messageRef,\n                className: \"chat-list\",\n                children: [item.fromAdmin !== true && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"clienttext\",\n                  children: /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: item.text\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 196,\n                    columnNumber: 57\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 195,\n                  columnNumber: 53\n                }, this), item.fromAdmin === true && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"admintext\",\n                  children: /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: item.text\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 202,\n                    columnNumber: 57\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 201,\n                  columnNumber: 53\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 45\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex chat-box-send\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              name: \"messageSend\",\n              type: \"text\",\n              onChange: handleChange,\n              placeholder: \"Make a message\",\n              ref: inputRef\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"flex-center sendchat\",\n              children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faPaperPlane\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 9\n  }, this);\n}\n\n_s(OpenChatBtn, \"KyzrAqu24h1bXTP4Gsay6U8/aW8=\");\n\n_c = OpenChatBtn;\nexport default _c2 = withRouter(OpenChatBtn);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"OpenChatBtn\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/namduong/Documents/dev/petshop-project/frontend/src/components/OpenChatBtn.js"],"names":["React","useContext","useEffect","useRef","useState","FontAwesomeIcon","faComment","faPaperPlane","socketIOClient","withRouter","axios","UserContext","ENDPOINT","OpenChatBtn","props","messageRef","inputRef","openChat","setOpenChat","onHover","setOnHover","inputValue","setInputValue","socket","chatList","setChatList","userName","setUserName","userEmail","setUserEmail","userInfoExist","setUserInfoExist","userInfo","sessionStorage","removeItem","setItem","_id","getItem","Math","floor","random","get","then","res","data","length","chatContent","emit","sessionId","isAdmin","on","setTimeout","current","scrollIntoView","behavior","handleChange","event","target","name","value","location","history","pathname","sendFirstChatOnSubmit","preventDefault","chatName","chatEmail","text","time","Date","sendChatOnSubmit","messageSend","map","item","index","fromAdmin"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useRef, useState } from 'react'\nimport '../Styles/Chat.css'\nimport '../App.css'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faComment, faPaperPlane } from '@fortawesome/free-solid-svg-icons'\nimport socketIOClient from \"socket.io-client\"\nimport { withRouter } from 'react-router-dom'\nimport axios from 'axios'\nimport { UserContext } from '../contexts/User';\n\nconst ENDPOINT = \"http://localhost:40020\";\n \nfunction OpenChatBtn(props) {\n    const messageRef = useRef();\n    const inputRef = useRef();\n    const [openChat, setOpenChat] = useState(false)\n    const [onHover, setOnHover] = useState(false)\n    const [inputValue, setInputValue] = useState(\"\")\n    // const [openChatContent, setOpenChatContent] = useState(false)\n\n    const socket = socketIOClient(ENDPOINT)\n    const [chatList, setChatList] = useState([])\n\n    const [userName, setUserName] = useState(\"\")\n    const [userEmail, setUserEmail] = useState(\"\")\n    const [userInfoExist, setUserInfoExist] = useState(false)\n\n    const { \n        userInfo\n    } = useContext(UserContext);\n\n    useEffect(() => {\n        if (userInfo) {\n            setUserName(userInfo.userName)\n            setUserEmail(userInfo.userEmail)\n            setUserInfoExist(true)\n            sessionStorage.removeItem('chat-id')\n            sessionStorage.setItem('chat-id', userInfo._id);\n        }\n        if (!sessionStorage.getItem('chat-id')) {\n            sessionStorage.setItem('chat-id', Math.floor(Math.random() * 190000000) + 100000000);\n        }\n        axios.get(`http://localhost:4000/chat/${sessionStorage.getItem('chat-id')}`)\n            .then(res => {\n                if (res.data.length > 0)\n                    setChatList(res.data[0].chatContent)\n            }\n        )\n        socket.emit('join', {\n            sessionId: sessionStorage.getItem('chat-id'),\n            isAdmin: false\n        })\n        socket.on('sendFirstInfo', (data)=> {\n            if (data.length > 0) setChatList(data[0].chatContent)\n        })\n        socket.on('thread', (data)=> {\n            setChatList(data.chatContent)\n        })\n        socket.on(\"admin-msg\", function(data) {\n            setChatList(chatList=> [...chatList, data]);\n            setTimeout(()=>{\n                messageRef.current.scrollIntoView({ behavior: \"smooth\" })\n            }, 100)\n        })\n    }, [userInfo])\n\n    const handleChange = (event) => {\n        setInputValue({...inputValue , [event.target.name]: event.target.value})\n    }\n    const location = props.history.location.pathname;\n\n    \n    const sendFirstChatOnSubmit = (event) => {\n        event.preventDefault()\n        socket.emit('firstMessage', {\n            userInfo: userInfo || null,\n            sessionId: sessionStorage.getItem('chat-id'),\n            chatName: userName,\n            chatEmail: userEmail,\n            chatContent: [\n                {\n                    text: inputValue.chatContent,\n                    time: new Date()\n                }\n            ]\n        })\n        setChatList(chatList=> [...chatList, {\n            text: inputValue.chatContent,\n            time: new Date()\n        }])\n    }\n\n    const sendChatOnSubmit = (event) => {\n        event.preventDefault();\n        socket.emit('messageSend', {\n            sessionId: sessionStorage.getItem('chat-id'),\n            text: inputValue.messageSend,\n            time: new Date(),\n        })\n        setChatList(chatList=> [...chatList, {text: inputValue.messageSend, time: new Date()}])\n        setTimeout(()=>{\n            messageRef.current.scrollIntoView({ behavior: \"smooth\" })\n        }, 100)\n        inputRef.current.value = \"\";\n    }\n\n    return (\n        <div \n            className={location === \"/login\" || location === \"/admin\" || location === \"/admin/dashboard\" ? \"chat-btn displayNone\" : \"chat-btn\"}\n            onMouseEnter={()=> { setOnHover(true) }}\n            onMouseLeave={()=> { if (openChat) { setOnHover(true) } else setOnHover(false) }}\n        >\n            <div \n                className={onHover ? \"chat-btn-container chat-btn-hover\" : \"chat-btn-container\"}\n                onClick={()=>{\n                    if (messageRef.current) messageRef.current.scrollIntoView({ behavior: \"smooth\" });\n                    if (openChat) { \n                        setOpenChat(false); \n                        setOnHover(false) \n                    } else { \n                        setOpenChat(true); \n                        setOnHover(true) \n                    }\n                }}\n                >\n                <FontAwesomeIcon icon={faComment} className=\"icon\"/>\n                <p>Live Chat</p>\n            </div>\n            <div className={openChat ? \"chat-box hide_chat_box\" : \"chat-box\"}>\n                <div className=\"chat-box-header\">\n                    Live Chat\n                </div>\n                { (chatList.length === 0) &&\n                    <div className=\"chat-box-body\">\n                        { userInfoExist === true &&\n                            <form onSubmit={sendFirstChatOnSubmit} className={openChat ? \"form-chat hide_chat_box_item\" : \"form-chat\"}>\n                                <label>Introduce yourself *</label>\n                                <input \n                                    type=\"text\" \n                                    onChange={(event)=>{\n                                        setUserName(event.target.value)\n                                    }} \n                                    value={userName}\n                                    placeholder=\"Name\" \n                                    className=\"intro\" disabled></input>\n                                <input\n                                    type=\"email\" \n                                    onChange={(event)=>{\n                                        setUserEmail(event.target.value)\n                                    }}\n                                    value={userEmail}\n                                    placeholder=\"Email\" \n                                    className=\"intro\" disabled></input>\n                                <label>Message *</label>\n                                <textarea name=\"chatContent\" type=\"textarea\" onChange={handleChange} className=\"message\" required></textarea>\n                                <button className=\"chat-box-body-btn\">Chat</button>\n                            </form>\n                        }\n                        { userInfoExist === false &&\n                            <form onSubmit={sendFirstChatOnSubmit} className={openChat ? \"form-chat hide_chat_box_item\" : \"form-chat\"}>\n                                <label>Introduce yourself *</label>\n                                <input \n                                    type=\"text\" \n                                    onChange={(event)=>{\n                                        setUserName(event.target.value)\n                                    }} \n                                    value={userName}\n                                    placeholder=\"Name\" \n                                    className=\"intro\" required></input>\n                                <input\n                                    type=\"email\" \n                                    onChange={(event)=>{\n                                        setUserEmail(event.target.value)\n                                    }}\n                                    value={userEmail}\n                                    placeholder=\"Email\" \n                                    className=\"intro\" required></input>\n                                <label>Message *</label>\n                                <textarea name=\"chatContent\" type=\"textarea\" onChange={handleChange} className=\"message\" required></textarea>\n                                <button className=\"btn chat-box-body-btn\">Chat</button>\n                            </form>\n                        }\n                    </div>\n                }\n                { (chatList.length > 0) && \n                    <div className=\"chat-box-body no-p\">\n                        <form onSubmit={sendChatOnSubmit} className={openChat ? \"form-chat hide_chat_box_item\" : \"form-chat\"}>\n                            <div className=\"flex-col chat-box-list\">\n                                {\n                                    chatList.map((item, index) => {\n                                        return (\n                                            <div key={index} ref={messageRef} className=\"chat-list\">\n                                                {\n                                                    item.fromAdmin !== true && \n                                                    <div className=\"clienttext\">\n                                                        <p>{item.text}</p>\n                                                    </div>\n                                                }\n                                                {\n                                                    item.fromAdmin === true && \n                                                    <div className=\"admintext\">\n                                                        <p>{item.text}</p>\n                                                    </div>\n                                                }\n                                            </div>\n                                        )\n                                    })\n                                }\n                            </div>  \n                            <div className=\"flex chat-box-send\">\n                                <input name=\"messageSend\" type=\"text\" onChange={handleChange} placeholder=\"Make a message\" ref={inputRef}></input>\n                                <button className=\"flex-center sendchat\">\n                                    <FontAwesomeIcon icon={faPaperPlane}/>\n                                </button>\n                            </div>\n                        </form>\n                    </div>\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default withRouter(OpenChatBtn);"]},"metadata":{},"sourceType":"module"}