{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/namduong/Documents/dev/petshop-project/src/components/Admin/Dashboard/Main/DashboardChartLine.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport '../../../../App.css';\nimport '../../../../Styles/Dashboard.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faChartBar, faClock } from '@fortawesome/free-solid-svg-icons';\nimport { Line } from '@reactchartjs/react-chart.js';\nexport default function DashboardChartLine(props) {\n  _s();\n\n  const order = props.order;\n  const [data, setData] = useState({});\n  useEffect(() => {\n    if (order.length > 0) {\n      const month = [{\n        id: 1,\n        totalSale: 0\n      }, {\n        id: 2,\n        totalSale: 0\n      }, {\n        id: 3,\n        totalSale: 0\n      }, {\n        id: 4,\n        totalSale: 0\n      }, {\n        id: 5,\n        totalSale: 0\n      }, {\n        id: 6,\n        totalSale: 0\n      }, {\n        id: 7,\n        totalSale: 0\n      }, {\n        id: 8,\n        totalSale: 0\n      }, {\n        id: 9,\n        totalSale: 0\n      }, {\n        id: 10,\n        totalSale: 0\n      }, {\n        id: 11,\n        totalSale: 0\n      }, {\n        id: 12,\n        totalSale: 0\n      }];\n\n      for (let i in order) {\n        for (let j in month) {\n          if (new Date(order[i].orderDate).getMonth() + 1 === month[j].id) {\n            month[j].totalSale += order[i].orderTotal;\n          }\n        }\n      }\n\n      const saleData = [];\n\n      for (let i in month) {\n        saleData.push(month[i].totalSale);\n      }\n\n      setData({\n        labels: ['Jan', 'Feb', 'Mar', 'Apr', 'Mai', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n        datasets: [{\n          label: '',\n          data: saleData,\n          fill: false,\n          backgroundColor: 'rgb(255, 99, 132)',\n          borderColor: 'rgba(255, 99, 132, 0.9)'\n        }]\n      });\n    }\n  }, [order]);\n  const options = {\n    legend: {\n      display: false\n    },\n    scales: {\n      xAxes: [{\n        gridLines: {\n          display: false\n        }\n      }],\n      yAxes: [{\n        type: 'linear',\n        display: true,\n        position: 'left'\n      }]\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chart chartline flex-col\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `headerbox flex-center ${props.color}`,\n      children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: faChartBar,\n        className: \"icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"top-location-container\",\n      style: {\n        height: 'max-content'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"headerbox-header\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"2020 Revenue\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"top-location-content flex\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"top-location-map\",\n          style: {\n            margin: '0'\n          },\n          children: /*#__PURE__*/_jsxDEV(Line, {\n            data: data,\n            options: options\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"count-line\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"count-status flex-center\",\n        children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faClock,\n          className: \"count-up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Updated 3 minutes ago\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 9\n  }, this);\n}\n\n_s(DashboardChartLine, \"tNVKLF/eI269iIOS4WygXQde5D8=\");\n\n_c = DashboardChartLine;\n\nvar _c;\n\n$RefreshReg$(_c, \"DashboardChartLine\");","map":{"version":3,"sources":["/Users/namduong/Documents/dev/petshop-project/src/components/Admin/Dashboard/Main/DashboardChartLine.js"],"names":["React","useEffect","useState","FontAwesomeIcon","faChartBar","faClock","Line","DashboardChartLine","props","order","data","setData","length","month","id","totalSale","i","j","Date","orderDate","getMonth","orderTotal","saleData","push","labels","datasets","label","fill","backgroundColor","borderColor","options","legend","display","scales","xAxes","gridLines","yAxes","type","position","color","height","margin"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport '../../../../App.css'\nimport '../../../../Styles/Dashboard.css'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faChartBar, faClock } from '@fortawesome/free-solid-svg-icons'  \nimport { Line } from '@reactchartjs/react-chart.js' \n\nexport default function DashboardChartLine(props) {\n \n    const order = props.order \n    const [data, setData] = useState({})\n\n    useEffect(()=>{\n        if (order.length > 0) {\n            const month = [\n                {\n                    id: 1,\n                    totalSale: 0\n                },\n                {\n                    id: 2,\n                    totalSale: 0\n                },\n                {\n                    id: 3,\n                    totalSale: 0\n                },\n                {\n                    id: 4,\n                    totalSale: 0\n                },\n                {\n                    id: 5,\n                    totalSale: 0\n                },\n                {\n                    id: 6,\n                    totalSale: 0\n                },\n                {\n                    id: 7,\n                    totalSale: 0\n                },\n                {\n                    id: 8,\n                    totalSale: 0\n                },\n                {\n                    id: 9,\n                    totalSale: 0\n                },\n                {\n                    id: 10,\n                    totalSale: 0\n                },\n                {\n                    id: 11,\n                    totalSale: 0\n                },\n                {\n                    id: 12,\n                    totalSale: 0\n                }\n            ] \n            for (let i in order) { \n                for (let j in month) {\n                    if (new Date(order[i].orderDate).getMonth() + 1 === month[j].id) {\n                            month[j].totalSale += order[i].orderTotal\n                    }\n                }\n            }\n            const saleData = []\n            for (let i in month) {\n                saleData.push(month[i].totalSale)\n            }\n            setData({\n                labels: ['Jan', 'Feb', 'Mar', 'Apr', 'Mai', 'Jun', 'Jul' ,'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n                datasets: [\n                    {\n                        label: '',\n                        data: saleData,\n                        fill: false,\n                        backgroundColor: 'rgb(255, 99, 132)',\n                        borderColor: 'rgba(255, 99, 132, 0.9)'\n                    }\n                ],\n            })\n        }\n    },[order])  \n\n    const options = {\n        legend: {\n            display: false,\n        },\n        scales: {\n            xAxes: [{ \n                gridLines: {\n                    display: false\n                }\n            }],\n            yAxes: [\n                {\n                    type: 'linear',\n                    display: true,\n                    position: 'left'\n                }\n            ],\n        }\n    }\n\n    return (\n        <div className=\"chart chartline flex-col\">\n            <div className={`headerbox flex-center ${props.color}`}>\n                <FontAwesomeIcon icon={faChartBar} className=\"icon\"/>\n            </div>\n            <div className=\"top-location-container\" style={{height: 'max-content'}}>\n                <div className=\"headerbox-header\">\n                    <p>2020 Revenue</p>\n                </div>\n                <div className=\"top-location-content flex\">\n                    <div className=\"top-location-map\" style={{margin: '0'}}>\n                        <Line data={data} options={options}/>\n                    </div>\n                </div>\n                <div className=\"count-line\"></div>\n                <div className=\"count-status flex-center\">\n                    <FontAwesomeIcon icon={faClock} className=\"count-up\"/> \n                    <p>Updated 3 minutes ago</p>\n                </div>\n            </div>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}